# -*- coding: utf-8 -*-
"""LVADSUSR83_DHIVYA_SHREE_A_LAB4_FINAL_PREDICTIVE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_ihK4hEDm54Du5z25-F17R3aoSmrvP--
"""

#LAB 4
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.ensemble import IsolationForest
from sklearn.preprocessing import StandardScaler, LabelEncoder

# Step 1: Read Data
df = pd.read_csv('/content/anomaly_train.csv')

# Step 2: Data Preprocessing
df.fillna(0, inplace=True)  # Assuming missing values are replaced with 0

# Step 3: Feature Engineering (if needed)
# No specific feature engineering is mentioned in the description

# Step 4: Exploratory Data Analysis (EDA)

print("Summary Statistics:")
print(df.describe())

# Visualization
sns.pairplot(df)
plt.show()

# Step 5: Label Encoding for Categorical Columns
categorical_cols = df.select_dtypes(include=['object']).columns.tolist()

# Initialize LabelEncoder
label_encoder = LabelEncoder()

# Perform label encoding for each categorical column
for col in categorical_cols:
    df[col] = label_encoder.fit_transform(df[col])

# Step 6: Anomaly Detection Algorithm
X = df.drop(['Time'], axis=1)

# Feature Scaling
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Anomaly Detection using Isolation Forest
outlier_detector = IsolationForest(contamination=0.05, random_state=42)
outliers = outlier_detector.fit_predict(X_scaled)

# Step 7: Flag Anomalies
df['anomaly_flag'] = np.where(outliers == -1, 'Anomaly', 'Normal')

# Step 8: Further Investigation
# Further actions can be decided based on the 'anomaly_flag'

# Print flagged anomalies for further investigation
print("Flagged Anomalies:")
print(df[df['anomaly_flag'] == 'Anomaly'])

"""INSIGHTS
Anamoly detection is done.
count,mean,std,max,min are found.
From there we can be able to see count is same for all the four which is transactionid, time,user is 1000.
min value for all the four is around 1.


pairplot for transactionID,amount,time and user is plotted as a graph so that we can be able to infer that how anamoly detection is done using isolation forest

when we are checking for amount vs amount, time vs time, transaction ID vs transaction ID, user vs user we get bar graph where in other combination we are able to spot the pairplot.



"""