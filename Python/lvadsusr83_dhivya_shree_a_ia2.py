# -*- coding: utf-8 -*-
"""LVADSUSR83_DHIVYA_SHREE_A_IA2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ikzRJ4J5CkN19Te8dR91OLcjUM-IuWQ-
"""

#1
import numpy as np
arr=np.array([[[255,0,0],[0,255,0],[0,0,255]],[[255,255,0],[255,0,255],[0,0,255]],[[127,127,127],[200,200,200],[50,50,50]]])
#print(arr)
arr1=np.array([[[0.2989],[0.5870],[0.1140]]])
#print(arr1)
print("The corresponding gray scale image values are:  ",arr*arr1)

#2
import numpy as np
def n_data(data):
  n_data = data - np.mean(data, axis=0)
  n_data = n_data / np.std(data, axis=0)
  return n_data
data = np.array([[100, 70, 70],
                  [170, 60, 66],
                  [630, 90, 99]])
n_data = n_data(data)
print(n_data)

#3
import numpy as np
data = np.array([[[18, 29, 34], [47, 50, 63]],
                 [[57, 85, 89], [105, 27, 22]],
                 [[11, 24, 46], [66, 98, 100]]])
data1 = data.reshape(-1, data.shape[2])
data2 =data1.reshape(data.shape[0], -1)
print(data2)

#4
import numpy as np
arr = np.array([[10, 30, 40, 25, 60],[15, 89, 53, 55, 50],[20, 10, 30, 32, 80]])
improvement_needed =arr[:, -1] - arr[:, 0]
print(improvement_needed)

#5
import numpy as np
def average(arr):
   three_subjects = arr[:, -3:]
   valid_scores =three_subjects[three_subjects != -1]
   average_scores = np.mean(valid_scores, axis=1)
   return average_scores
arr = np.array([
  [75, 80, 90, 85, -1],
  [82, 78, 85, 90, 65],
  [95, 88, -1, 82, 80]
])
avg=average(arr)
print(avg)

#6
import numpy as np

def adjust_temp(temp, arr):

  return temp + arr[:, np.newaxis]

temp = np.array([
  [10.5, 12.3, 14.7, 15.9, 17.8, 18.9, 20.3, 19.7, 17.2, 14.1, 11.3, 9.4],
  [12.1, 13.8, 15.9, 17.5, 19.1, 20.4, 21.8, 21.1, 18.6, 15.4, 12.7, 10.9],
])

arr = np.array([0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3])
arr = arr.reshape(1,12)
adjusted_temp = adjust_temp(temp, arr)
print(adjusted_temp)

#7
import numpy as np
data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami',
                 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}
employees_not_in_hr = [employee for employee in data['Name'] if data['Department'][data['Name'].index(employee)] != 'HR']
data1 = []
for name in employees_not_in_hr:
  arr = (name, data['City'][data['Name'].index(name)])
  data1.append(arr)
print(data1)

#8
import numpy as np
data = [
    {"Product": "Apples", "Category": "Fruit", "Price": 1.20, "Promotion": True},
    {"Product": "Bananas", "Category": "Fruit", "Price": 0.50, "Promotion": False},
    {"Product": "Cherries", "Category": "Fruit", "Price": 3.00, "Promotion": True},
    {"Product": "Dates", "Category": "Fruit", "Price": 2.50, "Promotion": True},
    {"Product": "Elderberries", "Category": "Fruit", "Price": 4.00, "Promotion": False},
    {"Product": "Flour", "Category": "Bakery", "Price": 1.50, "Promotion": True},
    {"Product": "Grapes", "Category": "Fruit", "Price": 2.00, "Promotion": False}
]


def get_average_price_by_category(data, category):
  category1 = [item for item in data if item["Category"] == category]
  if category1:
    total = sum([product["Price"] for product in category1])
    average = total / len(category1)
    return average
  else:
    return None
promotions = []
for item in data:
  if item["Category"] == "Fruit" and item["Price"] > get_average_price_by_category(data, "Fruit") and not item["Promotion"]:
    promotions.append(item)
print(promotions)

#9
import pandas as pd
employee = pd.DataFrame({
    "Employee": ["Alice", "Bob", "Charlie", "David", "Eve"],
    "Department": ["HR", "IT", "Finance", "IT", "Marketing"],
    "Manager": ["John", "Rachel", "Emily", "Rachel", "Mike"]})

project = pd.DataFrame({
    "Employee": ["Alice", "Charlie", "Eve", "David"],
    "Project": ["P1", "P3", "P2", "P4"]})
df = pd.merge(employee, project, on='Employee')
print(df[['Project', 'Department', 'Manager']])

#10
import pandas as pd
data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}
df = pd.DataFrame(data)
average_sales_per_dept = df.groupby(['Department'])['Sales'].mean()
sorted_average_sales = average_sales_per_dept.sort_values(ascending=False)
print(sorted_average_sales)